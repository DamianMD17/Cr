/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Clases.Curso;
import Mantenimiento.MantenimientoCursos;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import Clases.Estudiante;
import Mantenimiento.MantenimientoEstudiante;
import Mantenimiento.MantenimientoMatriculados;
import Clases.Matriculado;
import java.io.BufferedWriter;
import java.io.FileWriter;
import javax.swing.JOptionPane;

/**
 *
 * @author damia
 */
public class Matricula extends javax.swing.JFrame {

    private static final String archivoCursos = "Cursos.txt";
     private static final String archivoMatriculados = "Matriculados.txt";
    private DefaultTableModel tableModelCursos;
     private DefaultTableModel tableModelEstudiantes;
      private DefaultTableModel tableModelMatricula;
    private static final String archivoESTUDIANTE= "estudiantes.txt";
    
    public Matricula() {
        initComponents();
        inicializarCurso();
        inicializarEstudiante();
         inicializarMatricula();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCurso = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblMatricula = new javax.swing.JTable();
        btnMatricula = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        txtCurso = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblEstudiante = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblCurso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblCurso);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 210, 275, 90));

        tblMatricula.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblMatricula);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 280, 90));

        btnMatricula.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnMatricula.setText("Matricular");
        btnMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMatriculaActionPerformed(evt);
            }
        });
        jPanel1.add(btnMatricula, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, -1, 30));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Matriculados");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 110, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("cursos");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 170, 122, -1));

        txtNombre.setText("nombre");
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 154, -1));

        txtId.setText("cedula");
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        jPanel1.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 154, -1));

        txtCurso.setText("curso");
        txtCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCursoActionPerformed(evt);
            }
        });
        jPanel1.add(txtCurso, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, 154, -1));

        tblEstudiante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblEstudiante);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 360, 280, 90));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Estudiantes");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 330, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCursoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCursoActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMatriculaActionPerformed
        if(validaciones()){
        guardarTxt();   
        addRow();
        }
    }//GEN-LAST:event_btnMatriculaActionPerformed

    /**
     * @param args the command line arguments
     */
    private void cargarArchivoCursos(String ArchivoCurso) {
        try ( BufferedReader br = new BufferedReader(new FileReader(ArchivoCurso))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] dato = line.split(",");
                if (dato.length == 3) {
                    tableModelCursos.addRow(new Object[]{dato[0], dato[1], dato[2]});
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
     private void cargarArchivoEstudiante(String ArchivoEstudiante) {
    try (BufferedReader br = new BufferedReader(new FileReader(ArchivoEstudiante))) {
        String line;
        while ((line = br.readLine()) != null) {
            String[] dato = line.split(","); 
            if (dato.length == 3) {
             tableModelEstudiantes.addRow(new Object[]{dato[0], dato[1], dato[2]});
            }
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
}
     private void cargarArchivoMatricula(String archivoMatricula) {
    try (BufferedReader br = new BufferedReader(new FileReader(archivoMatricula))) {
        String line;
        while ((line = br.readLine()) != null) {
            String[] dato = line.split(","); 
            if (dato.length == 3) {
             tableModelMatricula.addRow(new Object[]{dato[0], dato[1], dato[2]});
            }
        }
    } catch (IOException e) {
        e.printStackTrace();
    }
}
    private void inicializarMatricula(){
        MantenimientoMatriculados mante = new MantenimientoMatriculados();
        mante.estudiantePorDefecto();
         ArrayList<Matriculado> listaMatriculado = mante.getstudentList();
         tableModelMatricula = new DefaultTableModel();
        
        
       tableModelMatricula.addColumn("Cedula");
        tableModelMatricula.addColumn("Nombre");
        tableModelMatricula.addColumn("Curso");
         
         cargarArchivoMatricula(archivoMatriculados);
         
         for (Matriculado i : listaMatriculado) {
           tableModelMatricula.addRow(new Object[]{
                i.getId(),
                i.getNombre(),
                i.getCurso()
                   });
                   }
        
        
         tblMatricula.setModel(tableModelMatricula);
        
    }
    private void inicializarEstudiante(){
        MantenimientoEstudiante mante = new MantenimientoEstudiante();
        mante.defaultStudent();
        ArrayList<Estudiante> listaEst = mante.getstudentList();
        
       tableModelEstudiantes = new DefaultTableModel();
        
        
         tableModelEstudiantes.addColumn("Cedula");
         tableModelEstudiantes.addColumn("Nombre");
         tableModelEstudiantes.addColumn("Carrera");
         
         cargarArchivoEstudiante(archivoESTUDIANTE);
         
         for (Estudiante listaestudiante : listaEst) {
            tableModelEstudiantes.addRow(new Object[]{
                listaestudiante.getId(),
                listaestudiante.getNombre(),
                listaestudiante.getCarrera()});
        }
         
         tblEstudiante.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tblEstudiante.getSelectedRow();
                    if (selectedRow >= 0) {
                        Vector rowData = (Vector) tableModelEstudiantes.getDataVector().elementAt(selectedRow);
                        txtId.setText((String) rowData.get(0));
                        txtNombre.setText((String) rowData.get(1));
                        

                    }
                }
            }
        });
        
         tblEstudiante.setModel(tableModelEstudiantes);
        
        
        
    }

    private void inicializarCurso() {
        MantenimientoCursos mante = new MantenimientoCursos();
        mante.defaultStudent();
        ArrayList<Curso> listaEst = mante.getCursosList();

         tableModelCursos = new DefaultTableModel();

          tableModelCursos.addColumn("Codigo");
          tableModelCursos.addColumn("Nombre Curso");
          tableModelCursos.addColumn("Creditos");

        cargarArchivoCursos(archivoCursos);

        for (Curso listaCursos : listaEst) {
              tableModelCursos.addRow(new Object[]{
                listaCursos.getCodigo(),
                listaCursos.getNombre(),
                listaCursos.getCreditos()});
        }

        tblCurso.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    int selectedRow = tblCurso.getSelectedRow();
                    if (selectedRow >= 0) {
                        Vector rowData = (Vector)   tableModelCursos.getDataVector().elementAt(selectedRow);
                        txtCurso.setText((String) rowData.get(1));

                    }
                }
            }
        });
        tblCurso.setModel(  tableModelCursos);
    }
     private void guardarTxt() {
    try (BufferedWriter bw = new BufferedWriter(new FileWriter(archivoMatriculados, true))) {
       
        String codigo = txtId.getText();
        String nombrecurso = txtNombre.getText();
        String creditos = txtCurso.getText();

        if (!codigo.isEmpty() && !nombrecurso.isEmpty() && !creditos.isEmpty()) {
            
            String linea =(codigo + "," + nombrecurso + "," + creditos);
            bw.write(linea);
            bw.newLine();
            JOptionPane.showMessageDialog(this, "Curso Matriculado con exito");
            
        }
          
        
    } catch (IOException ex) {
        ex.printStackTrace();
    }
}
  
  
 public void addRow() {
        String id = txtId.getText();
        String nombre = txtNombre.getText();
        String curso = txtCurso.getText();
       

        //Validar campos se encuentren llenos
       

        Matriculado matriculando = new Matriculado(id, nombre, curso);
        MantenimientoMatriculados man = new MantenimientoMatriculados ();
        man.crearEstudiante(id, nombre, curso);

        // Crear las filas
        tableModelMatricula.addRow(new Object[]{
            matriculando.getId(),
             matriculando.getNombre(),
             matriculando.getCurso()});

        //Limpiar txt
        txtId.setText("");
        txtNombre.setText("");
        txtCurso.setText("");
      
        //Asignar modelo a la tabla que creamos en el FRM
        tblMatricula.setModel(tableModelMatricula);

    }
    public Boolean validaciones(){
         String id = txtId.getText();
        String nombre = txtNombre.getText();
        String curso = txtCurso.getText();
       
         if (curso.isEmpty() || nombre.isEmpty() || id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Todos los campos deben estar llenos");
            return false;
        }
         for (int i = 0; i < tableModelMatricula.getRowCount(); i++) {
            String cedula = (String) tableModelMatricula.getValueAt(i, 0);

            if (id.equals(cedula)) {
                JOptionPane.showMessageDialog(this, "No se permite matricular mas de un curso");
                return false;
            }
        }
          return true;
    }
 
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Matricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Matricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Matricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Matricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Matricula().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMatricula;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblCurso;
    private javax.swing.JTable tblEstudiante;
    private javax.swing.JTable tblMatricula;
    private javax.swing.JTextField txtCurso;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
